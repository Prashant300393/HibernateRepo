package com.amdocs.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

import lombok.Data;

/**
	It is a number generation concept given by Database.
	In case of Hibernate f/w (new  generators), it uses one sequence
	named as: "hibernate_sequence" (generated by default)
	---------------------------------------------------------------------------------------------------------------------
	While using @SequenceGenerator(name = "emp", sequenceName = "emp_seq") 
	In first execution, 2 select SEQ.NEXTVAL Query will be generated with Given start value,
	and it is incremented by 1 + given incremented value(i.e 50)
	MEANS in Second execution the value will be [ 52 ]
 */

@Entity
@Data
public class Employee {

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "emp")
	@SequenceGenerator(name = "emp", sequenceName = "eid_sequence" , initialValue = 2, allocationSize = 1)
//	@SequenceGenerator(name = "emp", sequenceName = "emp_seq")
	@Column(name = "eid")
	private Integer empId;		
	
	@Column(name = "ename", unique = true)
	private String empName;
	
	@Column(name = "esal")
	private Double empSal;
}
